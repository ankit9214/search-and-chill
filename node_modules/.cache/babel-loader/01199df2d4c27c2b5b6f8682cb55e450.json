{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Documents/ReactJS/searchandchill/src/components/Movies.js\";\nimport React from 'react';\nimport { Container, Row, Col, Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst Movies = props => {\n  const moviesList = props.movies.length ? props.movies.map(movie => React.createElement(Col, {\n    sm: \"3\",\n    key: movie.movie_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"100%\",\n    src: movie.platforms[0].image_url,\n    alt: movie.movie_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    className: \"text-truncate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, movie.movie_name), movie.platforms.map(platform => React.createElement(CardLink, {\n    className: \"text-truncate\",\n    href: platform.play_url,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" \", platform.platform_name.toUpperCase())))))) : React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, moviesList));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/ankit/Documents/ReactJS/searchandchill/src/components/Movies.js"],"names":["React","Container","Row","Col","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Movies","props","moviesList","movies","length","map","movie","movie_id","platforms","image_url","movie_name","platform","play_url","platform_name","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,OAApC,EAA6CC,QAA7C,EAAuDC,QAAvD,EAAiEC,QAAjE,EACIC,SADJ,EACeC,YADf,QACmC,YADnC;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAAb,GAAsBH,KAAK,CAACE,MAAN,CAAaE,GAAb,CAAiBC,KAAK,IACtD,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,GAAG,EAAEA,KAAK,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACY;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAED,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBC,SAA1C;AAAqD,IAAA,GAAG,EAAEH,KAAK,CAACI,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCJ,KAAK,CAACI,UAA3C,CADJ,EAGQJ,KAAK,CAACE,SAAN,CAAgBH,GAAhB,CAAoBM,QAAQ,IACxB,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAoC,IAAA,IAAI,EAAEA,QAAQ,CAACC,QAAnD;AAA6D,IAAA,MAAM,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+ED,QAAQ,CAACE,aAAT,CAAuBC,WAAvB,EAA/E,CADJ,CAHR,CAFR,CADH,CADgC,CAAtB,GAed;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfL;AAiBA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,UADL,CADJ,CADJ;AAQH,CA3BD;;AA6BA,eAAeF,MAAf","sourcesContent":["import React from 'react'\nimport { Container, Row, Col, Card, CardImg, CardText, CardBody, CardLink,\n    CardTitle, CardSubtitle } from 'reactstrap';\n\nconst Movies = (props) => {\n\n    const moviesList = props.movies.length ? props.movies.map(movie => (\n             <Col sm=\"3\" key={movie.movie_id}>\n                <Card>\n                            <img width=\"100%\" src={movie.platforms[0].image_url} alt={movie.movie_name} />\n                        <CardBody>\n                            <CardText className=\"text-truncate\">{movie.movie_name}</CardText>\n                            {\n                                movie.platforms.map(platform => (\n                                    <CardLink className=\"text-truncate\" href={platform.play_url} target=\"_blank\"> {platform.platform_name.toUpperCase()}</CardLink>\n                                ))\n                            } \n                        </CardBody>\n                </Card>\n            </Col>\n\n    )) : <p className=\"center\"></p>\n\n    return (\n        <Container>\n            <Row>\n                {moviesList}\n            </Row>  \n        </Container>\n    )\n\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}