{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { counter, getId, getPrefix } from \"./context\";\n\nvar UID = function (_super) {\n  __extends(UID, _super);\n\n  function UID() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      quartz: _this.props.idSource || counter,\n      prefix: getPrefix(_this.props.idSource),\n      id: getId(_this.props.idSource || counter)\n    };\n\n    _this.uid = function (item) {\n      return _this.prefixId(_this.state.id + '-' + _this.state.quartz.uid(item));\n    };\n\n    return _this;\n  }\n\n  UID.prototype.prefixId = function (id) {\n    var uid = this.state.prefix + id;\n    return String(this.props.name ? this.props.name(uid) : uid);\n  };\n\n  UID.prototype.render = function () {\n    var children = this.props.children;\n    var id = this.state.id;\n    return children(this.prefixId(id), this.uid);\n  };\n\n  return UID;\n}(React.Component);\n\nexport { UID };","map":null,"metadata":{},"sourceType":"module"}